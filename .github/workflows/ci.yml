name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read
  checks: write  # Add permission to write check results

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      # - run: npx playwright install --with-deps # TODO: Uncomment this when e2e is setup
      - uses: nrwl/nx-set-shas@v4

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      # When you enable task distribution, run the e2e-ci task instead of e2e
      - name: Lint
        id: lint
        run: npx nx affected -t lint

      - name: Test
        id: test
        run: npx nx affected -t test

      - name: Build
        id: build
        run: npx nx affected -t build

      - name: Report Status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = (
              context.job.status === 'success' ? 'success' :
              context.job.status === 'failure' ? 'failure' :
              'neutral'
            );
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Verify',
              head_sha: context.sha,
              status: 'completed',
              conclusion: conclusion,
              output: {
                title: 'Verification Results',
                summary: `Lint, Test, and Build ${conclusion === 'success' ? 'passed' : 'failed'}`
              }
            });
